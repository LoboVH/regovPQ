"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.startServer = void 0;
require("reflect-metadata");
const ws_1 = require("ws");
const server_1 = require("./server");
const startServer = async (agent, config) => {
    var _a;
    const socketServer = (_a = config.socketServer) !== null && _a !== void 0 ? _a : new ws_1.Server({ noServer: true });
    const app = await (0, server_1.setupServer)(agent, Object.assign(Object.assign({}, config), { socketServer }));
    const server = app.listen(config.port);
    // If no socket server is provided, we will use the existing http server
    // to also host the websocket server
    if (!config.socketServer) {
        server.on('upgrade', (request, socket, head) => {
            // eslint-disable-next-line @typescript-eslint/no-empty-function
            socketServer.handleUpgrade(request, socket, head, () => { });
        });
    }
    return server;
};
exports.startServer = startServer;
//# sourceMappingURL=index.js.map