import type { Version } from '../examples';
import { Agent } from '@aries-framework/core';
import { TsoaResponse } from 'tsoa';
import { SchemaId } from '../examples';
export declare class SchemaController {
    private agent;
    constructor(agent: Agent);
    /**
     * Retrieve schema by schema id
     *
     * @param schemaId
     * @returns Schema
     */
    getSchemaById(schemaId: SchemaId, notFoundError: TsoaResponse<404, {
        reason: string;
    }>, forbiddenError: TsoaResponse<403, {
        reason: string;
    }>, badRequestError: TsoaResponse<400, {
        reason: string;
    }>, internalServerError: TsoaResponse<500, {
        message: string;
    }>): Promise<any>;
    /**
     * Creates a new schema and registers schema on ledger
     *
     * @param schema
     * @returns schema
     */
    createSchema(schema: {
        name: string;
        version: Version;
        attributes: string[];
    }, forbiddenError: TsoaResponse<400, {
        reason: string;
    }>, internalServerError: TsoaResponse<500, {
        message: string;
    }>): Promise<any>;
}
