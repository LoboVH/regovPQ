"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DidController = void 0;
const core_1 = require("@aries-framework/core");
const tsoa_1 = require("tsoa");
const tsyringe_1 = require("tsyringe");
const examples_1 = require("../examples");
let DidController = class DidController extends tsoa_1.Controller {
    constructor(agent) {
        super();
        this.agent = agent;
    }
    /**
     * Resolves did and returns did resolution result
     * @param did Decentralized Identifier
     * @returns DidResolutionResult
     */
    async getDidRecordByDid(did) {
        const resolveResult = await this.agent.dids.resolve(did);
        if (!resolveResult.didDocument) {
            this.setStatus(500);
            return { resolveResult };
        }
        return Object.assign(Object.assign({}, resolveResult), { didDocument: resolveResult.didDocument.toJSON() });
    }
};
__decorate([
    (0, tsoa_1.Example)(examples_1.DidRecordExample),
    (0, tsoa_1.Get)('/:did'),
    __param(0, (0, tsoa_1.Path)('did')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], DidController.prototype, "getDidRecordByDid", null);
DidController = __decorate([
    (0, tsoa_1.Tags)('Dids'),
    (0, tsoa_1.Route)('/dids'),
    (0, tsyringe_1.injectable)(),
    __metadata("design:paramtypes", [core_1.Agent])
], DidController);
exports.DidController = DidController;
//# sourceMappingURL=DidController.js.map